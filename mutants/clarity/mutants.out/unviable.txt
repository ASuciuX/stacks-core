clarity/src/vm/types/signatures.rs:1349: replace TypeSignature::construct_parent_list_type -> Result<ListTypeData> with Ok(Default::default())
clarity/src/vm/types/signatures.rs:498: replace TypeSignature::new_response -> Result<TypeSignature> with Ok(Default::default())
clarity/src/vm/types/signatures.rs:401: replace <impl TryFrom for StringUTF8Length>::try_from -> Result<StringUTF8Length> with Ok(Default::default())
clarity/src/vm/types/signatures.rs:721: replace TypeSignature::canonicalize -> TypeSignature with Default::default()
clarity/src/vm/types/signatures.rs:243: replace FunctionArgSignature::canonicalize -> FunctionArgSignature with Default::default()
clarity/src/vm/types/signatures.rs:1356: replace TypeSignature::parent_list_type -> std::result::Result<ListTypeData, CheckErrors> with Ok(Default::default())
clarity/src/vm/types/signatures.rs:464: replace ListTypeData::destruct -> (TypeSignature, u32) with (Default::default(), 0)
clarity/src/vm/types/signatures.rs:128: replace SequenceSubtype::unit_type -> TypeSignature with Default::default()
clarity/src/vm/types/signatures.rs:1463: replace TypeSignature::parse_optional_type_repr -> Result<TypeSignature> with Ok(Default::default())
clarity/src/vm/types/signatures.rs:1305: replace TypeSignature::empty_list -> ListTypeData with Default::default()
clarity/src/vm/types/signatures.rs:1417: replace TypeSignature::parse_buff_type_repr -> Result<TypeSignature> with Ok(Default::default())
clarity/src/vm/types/signatures.rs:273: replace FunctionType::canonicalize -> FunctionType with Default::default()
clarity/src/vm/types/signatures.rs:992: replace TypeSignature::max_buffer -> TypeSignature with Default::default()
clarity/src/vm/types/signatures.rs:486: replace TypeSignature::new_option -> Result<TypeSignature> with Ok(Default::default())
clarity/src/vm/types/signatures.rs:1312: replace TypeSignature::type_of -> TypeSignature with Default::default()
clarity/src/vm/types/signatures.rs:1339: replace TypeSignature::literal_type_of -> TypeSignature with Default::default()
clarity/src/vm/types/signatures.rs:958: replace TypeSignature::empty_buffer -> TypeSignature with Default::default()
clarity/src/vm/types/signatures.rs:1446: replace TypeSignature::parse_string_ascii_type_repr -> Result<TypeSignature> with Ok(Default::default())
clarity/src/vm/types/signatures.rs:978: replace TypeSignature::max_string_ascii -> TypeSignature with Default::default()
clarity/src/vm/types/signatures.rs:329: replace <impl From for TypeSignature>::from -> Self with Default::default()
clarity/src/vm/types/signatures.rs:806: replace <impl TryFrom for TupleTypeSignature>::try_from -> Result<TupleTypeSignature> with Ok(Default::default())
clarity/src/vm/types/signatures.rs:480: replace ListTypeData::get_list_item_type -> &TypeSignature with &Default::default()
clarity/src/vm/types/signatures.rs:1476: replace TypeSignature::parse_response_type_repr -> Result<TypeSignature> with Ok(Default::default())
clarity/src/vm/types/signatures.rs:763: replace TypeSignature::concretize -> Result<TypeSignature> with Ok(Default::default())
clarity/src/vm/types/signatures.rs:1007: replace TypeSignature::bound_string_ascii_type -> TypeSignature with Default::default()
clarity/src/vm/types/signatures.rs:1388: replace TypeSignature::parse_list_type_repr -> Result<TypeSignature> with Ok(Default::default())
clarity/src/vm/types/signatures.rs:1409: replace TypeSignature::parse_tuple_type_repr -> Result<TypeSignature> with Ok(Default::default())
clarity/src/vm/types/signatures.rs:1019: replace TypeSignature::factor_out_no_type -> Result<TypeSignature> with Ok(Default::default())
clarity/src/vm/types/signatures.rs:887: replace TupleTypeSignature::parse_name_type_pair_list -> Result<TupleTypeSignature> with Ok(Default::default())
clarity/src/vm/types/signatures.rs:861: replace TupleTypeSignature::get_type_map -> &BTreeMap<ClarityName, TypeSignature> with &BTreeMap::from_iter([(Default::default(), Default::default())])
clarity/src/vm/types/signatures.rs:1065: replace TypeSignature::least_supertype_v2_0 -> Result<TypeSignature> with Ok(Default::default())
clarity/src/vm/types/signatures.rs:1167: replace TypeSignature::least_supertype_v2_1 -> Result<TypeSignature> with Ok(Default::default())
clarity/src/vm/types/signatures.rs:857: replace TupleTypeSignature::field_type -> Option<&TypeSignature> with Some(&Default::default())
clarity/src/vm/types/signatures.rs:261: replace FunctionReturnsSignature::canonicalize -> FunctionReturnsSignature with Default::default()
clarity/src/vm/types/signatures.rs:1431: replace TypeSignature::parse_string_utf8_type_repr -> Result<TypeSignature> with Ok(Default::default())
clarity/src/vm/types/signatures.rs:1372: replace TypeSignature::parse_atom_type -> Result<TypeSignature> with Ok(Default::default())
clarity/src/vm/types/signatures.rs:999: replace TypeSignature::contract_name_string_ascii_type -> TypeSignature with Default::default()
clarity/src/vm/types/signatures.rs:939: replace FunctionSignature::canonicalize -> FunctionSignature with Default::default()
clarity/src/vm/types/signatures.rs:1551: replace TypeSignature::parse_trait_type_repr -> Result<BTreeMap<ClarityName, FunctionSignature>> with Ok(BTreeMap::from_iter([(Default::default(), Default::default())]))
clarity/src/vm/types/signatures.rs:1301: replace TypeSignature::list_of -> Result<TypeSignature> with Ok(Default::default())
clarity/src/vm/types/signatures.rs:1489: replace TypeSignature::parse_type_repr -> Result<TypeSignature> with Ok(Default::default())
clarity/src/vm/types/signatures.rs:825: replace <impl TryFrom for TupleTypeSignature>::try_from -> Result<TupleTypeSignature> with Ok(Default::default())
clarity/src/vm/types/signatures.rs:365: replace <impl TryFrom for BufferLength>::try_from -> Result<BufferLength> with Ok(Default::default())
clarity/src/vm/types/signatures.rs:415: replace <impl TryFrom for StringUTF8Length>::try_from -> Result<StringUTF8Length> with Ok(Default::default())
clarity/src/vm/types/signatures.rs:321: replace <impl From for FunctionSignature>::from -> FunctionSignature with Default::default()
clarity/src/vm/types/signatures.rs:376: replace <impl TryFrom for BufferLength>::try_from -> Result<BufferLength> with Ok(Default::default())
clarity/src/vm/types/signatures.rs:59: replace AssetIdentifier::STX_burned -> AssetIdentifier with Default::default()
clarity/src/vm/types/signatures.rs:966: replace TypeSignature::min_string_ascii -> TypeSignature with Default::default()
clarity/src/vm/types/signatures.rs:861: replace TupleTypeSignature::get_type_map -> &BTreeMap<ClarityName, TypeSignature> with &BTreeMap::new()
clarity/src/vm/types/signatures.rs:962: replace TypeSignature::min_buffer -> TypeSignature with Default::default()
clarity/src/vm/types/signatures.rs:444: replace ListTypeData::new_list -> Result<ListTypeData> with Ok(Default::default())
clarity/src/vm/types/signatures.rs:464: replace ListTypeData::destruct -> (TypeSignature, u32) with (Default::default(), 1)
clarity/src/vm/types/signatures.rs:1812: replace parse_name_type_pairs -> Result<Vec<(ClarityName, TypeSignature)>> with Ok(vec![(Default::default(), Default::default())])
clarity/src/vm/types/signatures.rs:985: replace TypeSignature::max_string_utf8 -> TypeSignature with Default::default()
clarity/src/vm/types/signatures.rs:354: replace <impl TryFrom for BufferLength>::try_from -> Result<BufferLength> with Ok(Default::default())
clarity/src/vm/types/signatures.rs:429: replace <impl TryFrom for StringUTF8Length>::try_from -> Result<StringUTF8Length> with Ok(Default::default())
clarity/src/vm/types/signatures.rs:1054: replace TypeSignature::least_supertype -> Result<TypeSignature> with Ok(Default::default())
clarity/src/vm/types/signatures.rs:972: replace TypeSignature::min_string_utf8 -> TypeSignature with Default::default()
clarity/src/vm/types/signatures.rs:733: replace TypeSignature::canonicalize_v2_1 -> TypeSignature with Default::default()
clarity/src/vm/types/signatures.rs:49: replace AssetIdentifier::STX -> AssetIdentifier with Default::default()
clarity/src/vm/types/signatures.rs:335: replace <impl From for TypeSignature>::from -> Self with Default::default()
